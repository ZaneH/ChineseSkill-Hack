/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "ChineseSkillNew-Structs.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class NSMutableURLRequest, UILocalNotification, NSURLConnection, NSMutableData, NSMutableArray, NSData, NSMutableDictionary, NSString, NSError, NSURLRequest, NSDictionary, NSHTTPURLResponse;

@interface MKNetworkOperation : XXUnknownSuperclass {
	int _state;
	BOOL _freezable;
	int _postDataEncoding;
	BOOL _shouldContinueWithInvalidCertificate;
	BOOL _shouldShowLocalNotificationOnError;
	BOOL _isCancelled;
	unsigned _stringEncoding;
	NSError* _error;
	NSMutableDictionary* _cacheHeaders;
	NSString* _clientCertificate;
	NSString* _clientCertificatePassword;
	id _authHandler;
	id _operationStateChangedHandler;
	unsigned _credentialPersistence;
	UILocalNotification* _localNotification;
	NSURLConnection* _connection;
	NSString* _uniqueId;
	NSMutableURLRequest* _request;
	NSHTTPURLResponse* _response;
	NSMutableDictionary* _fieldsToBePosted;
	NSMutableArray* _filesToBePosted;
	NSMutableArray* _dataToBePosted;
	NSString* _username;
	NSString* _password;
	NSMutableArray* _responseBlocks;
	NSMutableArray* _errorBlocks;
	NSMutableArray* _errorBlocksType2;
	NSMutableData* _mutableData;
	unsigned _downloadedDataSize;
	NSMutableArray* _notModifiedHandlers;
	NSMutableArray* _uploadProgressChangedHandlers;
	NSMutableArray* _downloadProgressChangedHandlers;
	id _postDataEncodingHandler;
	int _startPosition;
	NSMutableArray* _downloadStreams;
	NSData* _cachedResponse;
	id _cacheHandlingBlock;
	SecTrust* _serverTrust;
	unsigned _backgroundTaskId;
}
@property(readonly, copy, nonatomic) NSString* HTTPMethod;
@property(readonly, assign, nonatomic) int HTTPStatusCode;
@property(copy, nonatomic) id authHandler;
@property(assign, nonatomic) unsigned backgroundTaskId;
@property(copy, nonatomic) id cacheHandlingBlock;
@property(retain, nonatomic) NSMutableDictionary* cacheHeaders;
@property(copy, nonatomic) NSData* cachedResponse;
@property(copy, nonatomic) NSString* clientCertificate;
@property(copy, nonatomic) NSString* clientCertificatePassword;
@property(retain, nonatomic) NSURLConnection* connection;
@property(assign, nonatomic) unsigned credentialPersistence;
@property(retain, nonatomic) NSMutableArray* dataToBePosted;
@property(retain, nonatomic) NSMutableArray* downloadProgressChangedHandlers;
@property(retain, nonatomic) NSMutableArray* downloadStreams;
@property(assign, nonatomic) unsigned downloadedDataSize;
@property(retain, nonatomic) NSError* error;
@property(retain, nonatomic) NSMutableArray* errorBlocks;
@property(retain, nonatomic) NSMutableArray* errorBlocksType2;
@property(retain, nonatomic) NSMutableDictionary* fieldsToBePosted;
@property(retain, nonatomic) NSMutableArray* filesToBePosted;
@property(assign, nonatomic) BOOL freezable;
@property(assign, nonatomic) BOOL isCancelled;
@property(retain, nonatomic) UILocalNotification* localNotification;
@property(retain, nonatomic) NSMutableData* mutableData;
@property(retain, nonatomic) NSMutableArray* notModifiedHandlers;
@property(copy, nonatomic) id operationStateChangedHandler;
@property(copy, nonatomic) NSString* password;
@property(assign, nonatomic) int postDataEncoding;
@property(copy, nonatomic) id postDataEncodingHandler;
@property(readonly, copy, nonatomic) NSDictionary* readonlyPostDictionary;
@property(readonly, assign, nonatomic) NSURLRequest* readonlyRequest;
@property(readonly, assign, nonatomic) NSHTTPURLResponse* readonlyResponse;
@property(retain, nonatomic) NSMutableURLRequest* request;
@property(retain, nonatomic) NSHTTPURLResponse* response;
@property(retain, nonatomic) NSMutableArray* responseBlocks;
@property(assign, nonatomic) SecTrust* serverTrust;
@property(assign, nonatomic) BOOL shouldContinueWithInvalidCertificate;
@property(assign, nonatomic) BOOL shouldShowLocalNotificationOnError;
@property(assign, nonatomic) int startPosition;
@property(assign, nonatomic) int state;
@property(assign, nonatomic) unsigned stringEncoding;
@property(copy, nonatomic) NSString* uniqueId;
@property(retain, nonatomic) NSMutableArray* uploadProgressChangedHandlers;
@property(readonly, copy, nonatomic) NSString* url;
@property(copy, nonatomic) NSString* username;
+ (BOOL)automaticallyNotifiesObserversForKey:(id)key;
- (id)initWithCoder:(id)coder;
- (id)initWithURLString:(id)urlstring params:(id)params httpMethod:(id)method;
- (void).cxx_destruct;
- (void)addCompletionHandler:(id)handler errorHandler:(id)handler2;
- (void)addData:(id)data forKey:(id)key;
- (void)addData:(id)data forKey:(id)key mimeType:(id)type fileName:(id)name;
- (void)addDownloadStream:(id)stream;
- (void)addFile:(id)file forKey:(id)key;
- (void)addFile:(id)file forKey:(id)key mimeType:(id)type;
- (void)addHeaders:(id)headers;
- (id)bodyData;
- (void)cancel;
- (void)connection:(id)connection didFailWithError:(id)error;
- (void)connection:(id)connection didReceiveData:(id)data;
- (void)connection:(id)connection didReceiveResponse:(id)response;
- (void)connection:(id)connection didSendBodyData:(int)data totalBytesWritten:(int)written totalBytesExpectedToWrite:(int)write;
- (id)connection:(id)connection willSendRequest:(id)request redirectResponse:(id)response;
- (void)connection:(id)connection willSendRequestForAuthenticationChallenge:(id)authenticationChallenge;
- (void)connectionDidFinishLoading:(id)connection;
- (id)copyWithZone:(NSZone*)zone;
- (id)curlCommandLineString;
- (void)dealloc;
- (void)decompressedResponseImageOfSize:(CGSize)size completionHandler:(id)handler;
- (id)description;
- (void)encodeWithCoder:(id)coder;
- (id)encodedPostDataString;
- (void)endBackgroundTask;
- (BOOL)isCacheable;
- (BOOL)isCachedResponse;
- (BOOL)isConcurrent;
- (BOOL)isEqual:(id)equal;
- (BOOL)isExecuting;
- (BOOL)isFinished;
- (BOOL)isReady;
- (void)main;
- (void)notifyCache;
- (void)onCompletion:(id)completion onError:(id)error;
- (void)onDownloadProgressChanged:(id)changed;
- (void)onNotModified:(id)modified;
- (void)onUploadProgressChanged:(id)changed;
- (void)operationFailedWithError:(id)error;
- (void)operationSucceeded;
- (id)responseData;
- (id)responseImage;
- (id)responseJSON;
- (void)responseJSONWithCompletionHandler:(id)completionHandler;
- (id)responseString;
- (id)responseStringWithEncoding:(unsigned)encoding;
- (void)setAuthorizationHeaderValue:(id)value forAuthType:(id)authType;
- (void)setCacheHandler:(id)handler;
- (void)setCachedData:(id)data;
- (void)setCustomPostDataEncodingHandler:(id)handler forType:(id)type;
- (void)setUploadStream:(id)stream;
- (void)setUsername:(id)username password:(id)password;
- (void)setUsername:(id)username password:(id)password basicAuth:(BOOL)auth;
- (void)showLocalNotification;
- (void)start;
- (id)uniqueIdentifier;
- (void)updateHandlersFromOperation:(id)operation;
- (void)updateOperationBasedOnPreviousHeaders:(id)headers;
@end

