/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import <XXUnknownSuperclass.h> // Unknown library

@class NSMutableDictionary, FBSession, NSTimer, NSMutableSet, NSString, NSRegularExpression;

@interface FBAppEvents : XXUnknownSuperclass {
	BOOL _haveOutstandingPersistedData;
	BOOL _explicitEventsLoggedYet;
	BOOL _appSupportsImplicitLogging;
	BOOL _haveFetchedAppSettings;
	unsigned _flushBehavior;
	NSString* _loggingOverrideAppID;
	FBSession* _lastSessionLoggedTo;
	NSTimer* _flushTimer;
	NSTimer* _attributionIDRecheckTimer;
	int _appSupportsAttributionStatus;
	NSRegularExpression* _eventNameRegex;
	NSMutableSet* _validatedIdentifiers;
	NSMutableDictionary* _appAuthSessions;
	NSMutableDictionary* _anonymousSessions;
}
@property(readonly, retain) NSMutableDictionary* anonymousSessions;
@property(readonly, retain) NSMutableDictionary* appAuthSessions;
@property(assign) int appSupportsAttributionStatus;
@property(assign) BOOL appSupportsImplicitLogging;
@property(retain) NSTimer* attributionIDRecheckTimer;
@property(copy) NSRegularExpression* eventNameRegex;
@property(assign) BOOL explicitEventsLoggedYet;
@property(assign) unsigned flushBehavior;
@property(retain) NSTimer* flushTimer;
@property(assign) BOOL haveFetchedAppSettings;
@property(assign) BOOL haveOutstandingPersistedData;
@property(retain) FBSession* lastSessionLoggedTo;
@property(copy) NSString* loggingOverrideAppID;
@property(retain) NSMutableSet* validatedIdentifiers;
+ (void)activateApp;
+ (void)clearPersistedAppEventData;
+ (id)customAudienceThirdPartyIDRequest:(id)request;
+ (void)ensureOnMainThread;
+ (void)flush;
+ (unsigned)flushBehavior;
+ (id)flushReasonToString:(int)string;
+ (BOOL)limitEventUsage;
+ (void)logAndNotify:(id)notify;
+ (void)logAndNotify:(id)notify allowLogAsDeveloperError:(BOOL)error;
+ (void)logConversionPixel:(id)pixel valueOfPixel:(double)pixel2 session:(id)session;
+ (void)logEvent:(id)event;
+ (void)logEvent:(id)event parameters:(id)parameters;
+ (void)logEvent:(id)event valueToSum:(double)sum;
+ (void)logEvent:(id)event valueToSum:(double)sum parameters:(id)parameters;
+ (void)logEvent:(id)event valueToSum:(id)sum parameters:(id)parameters session:(id)session;
+ (void)logImplicitEvent:(id)event valueToSum:(id)sum parameters:(id)parameters session:(id)session;
+ (void)logPurchase:(double)purchase currency:(id)currency;
+ (void)logPurchase:(double)purchase currency:(id)currency parameters:(id)parameters;
+ (void)logPurchase:(double)purchase currency:(id)currency parameters:(id)parameters session:(id)session;
+ (id)loggingOverrideAppID;
+ (void)persistAppEventsData:(id)data;
+ (id)persistenceDocumentFilePath:(id)path;
+ (id)persistenceFilePath:(id)path directory:(unsigned)directory;
+ (id)persistenceLibraryFilePath:(id)path;
+ (id)retrievePersistedAppEventData;
+ (void)setFlushBehavior:(unsigned)behavior;
+ (void)setLimitEventUsage:(BOOL)usage;
+ (void)setLoggingOverrideAppID:(id)anId;
+ (id)singleton;
+ (id)unaffinitizedSessionFromToken:(id)token appID:(id)anId;
+ (long)unixTimeNow;
- (id)init;
- (id)appIDToLogEventsWith:(id)with;
- (void)appendAttributionAndAdvertiserIDs:(id)ids session:(id)session accessAdvertisingID:(BOOL)anId;
- (void)applicationDidBecomeActive;
- (void)applicationMovingFromActiveStateOrTerminating;
- (void)attributionIDRecheckTimerFired:(id)fired;
- (BOOL)doesSessionHaveUserToken:(id)token;
- (void)flush:(int)flush session:(id)session;
- (void)flushOnMainQueue:(int)queue session:(id)session;
- (void)flushTimerFired:(id)fired;
- (void)handleActivitiesPostCompletion:(id)completion loggingEntry:(id)entry session:(id)session;
- (id)instanceCustomAudienceThirdPartyIDRequest:(id)request;
- (void)instanceFlush:(int)flush;
- (void)instanceLogEvent:(id)event valueToSum:(id)sum parameters:(id)parameters isImplicitlyLogged:(BOOL)logged session:(id)session;
- (void)persistEventDataIfNotInFlight;
- (BOOL)regexValidateIdentifier:(id)identifier;
- (id)sessionToSendRequestTo:(id)to;
- (BOOL)updateAppEventsStateWithPersistedData:(id)persistedData;
- (BOOL)validateIdentifier:(id)identifier;
@end

