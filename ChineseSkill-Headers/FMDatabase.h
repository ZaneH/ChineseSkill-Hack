/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "ChineseSkillNew-Structs.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class NSMutableDictionary, NSMutableSet, NSString, NSDateFormatter;

@interface FMDatabase : XXUnknownSuperclass {
	sqlite3* _db;
	NSString* _databasePath;
	BOOL _logsErrors;
	BOOL _crashOnErrors;
	BOOL _traceExecution;
	BOOL _checkedOut;
	BOOL _shouldCacheStatements;
	BOOL _isExecutingStatement;
	BOOL _inTransaction;
	double _maxBusyRetryTimeInterval;
	double _startBusyRetryTime;
	NSMutableDictionary* _cachedStatements;
	NSMutableSet* _openResultSets;
	NSMutableSet* _openFunctions;
	NSDateFormatter* _dateFormat;
}
@property(retain) NSMutableDictionary* cachedStatements;
@property(assign) BOOL checkedOut;
@property(assign) BOOL crashOnErrors;
@property(assign) BOOL logsErrors;
@property(assign) BOOL traceExecution;
+ (id)FMDBUserVersion;
+ (long)FMDBVersion;
+ (id)databaseWithPath:(id)path;
+ (BOOL)isSQLiteThreadSafe;
+ (id)sqliteLibVersion;
+ (id)storeableDateFormat:(id)format;
- (id)init;
- (id)initWithPath:(id)path;
- (void).cxx_destruct;
- (BOOL)beginDeferredTransaction;
- (BOOL)beginTransaction;
- (void)bindObject:(id)object toColumn:(int)column inStatement:(sqlite3_stmt*)statement;
- (BOOL)boolForQuery:(id)query;
- (int)busyRetryTimeout;
- (id)cachedStatementForQuery:(id)query;
- (int)changes;
- (void)clearCachedStatements;
- (BOOL)close;
- (void)closeOpenResultSets;
- (BOOL)columnExists:(id)exists columnName:(id)name;
- (BOOL)columnExists:(id)exists inTableWithName:(id)name;
- (BOOL)commit;
- (id)dataForQuery:(id)query;
- (BOOL)databaseExists;
- (id)databasePath;
- (id)dateForQuery:(id)query;
- (id)dateFromString:(id)string;
- (void)dealloc;
- (double)doubleForQuery:(id)query;
- (id)errorWithMessage:(id)message;
- (id)executeQuery:(id)query;
- (id)executeQuery:(id)query withArgumentsInArray:(id)array;
- (id)executeQuery:(id)query withArgumentsInArray:(id)array orDictionary:(id)dictionary orVAList:(void*)list;
- (id)executeQuery:(id)query withParameterDictionary:(id)parameterDictionary;
- (id)executeQuery:(id)query withVAList:(void*)valist;
- (id)executeQueryWithFormat:(id)format;
- (BOOL)executeStatements:(id)statements;
- (BOOL)executeStatements:(id)statements withResultBlock:(id)resultBlock;
- (BOOL)executeUpdate:(id)update;
- (BOOL)executeUpdate:(id)update error:(id*)error withArgumentsInArray:(id)array orDictionary:(id)dictionary orVAList:(void*)list;
- (BOOL)executeUpdate:(id)update withArgumentsInArray:(id)array;
- (BOOL)executeUpdate:(id)update withErrorAndBindings:(id*)errorAndBindings;
- (BOOL)executeUpdate:(id)update withParameterDictionary:(id)parameterDictionary;
- (BOOL)executeUpdate:(id)update withVAList:(void*)valist;
- (BOOL)executeUpdateWithFormat:(id)format;
- (void)extractSQL:(id)sql argumentsList:(void*)list intoString:(id)string arguments:(id)arguments;
- (void)finalize;
- (id)getSchema;
- (id)getTableSchema:(id)schema;
- (BOOL)goodConnection;
- (BOOL)hadError;
- (BOOL)hasDateFormatter;
- (BOOL)hasOpenResultSets;
- (id)inSavePoint:(id)savePoint;
- (BOOL)inTransaction;
- (int)intForQuery:(id)query;
- (id)lastError;
- (int)lastErrorCode;
- (id)lastErrorMessage;
- (long long)lastInsertRowId;
- (long)longForQuery:(id)query;
- (void)makeFunctionNamed:(id)named maximumArguments:(int)arguments withBlock:(id)block;
- (double)maxBusyRetryTimeInterval;
- (BOOL)open;
- (BOOL)openWithFlags:(int)flags;
- (BOOL)rekey:(id)rekey;
- (BOOL)rekeyWithData:(id)data;
- (BOOL)releaseSavePointWithName:(id)name error:(id*)error;
- (void)resultSetDidClose:(id)resultSet;
- (BOOL)rollback;
- (BOOL)rollbackToSavePointWithName:(id)name error:(id*)error;
- (void)setBusyRetryTimeout:(int)timeout;
- (void)setCachedStatement:(id)statement forQuery:(id)query;
- (void)setDateFormat:(id)format;
- (BOOL)setKey:(id)key;
- (BOOL)setKeyWithData:(id)data;
- (void)setMaxBusyRetryTimeInterval:(double)interval;
- (void)setShouldCacheStatements:(BOOL)cacheStatements;
- (void)setUserVersion:(unsigned)version;
- (BOOL)shouldCacheStatements;
- (sqlite3*)sqliteHandle;
- (const char*)sqlitePath;
- (BOOL)startSavePointWithName:(id)name error:(id*)error;
- (id)stringForQuery:(id)query;
- (id)stringFromDate:(id)date;
- (BOOL)tableExists:(id)exists;
- (BOOL)update:(id)update withErrorAndBindings:(id*)errorAndBindings;
- (unsigned)userVersion;
- (BOOL)validateSQL:(id)sql error:(id*)error;
- (void)warnInUse;
@end

