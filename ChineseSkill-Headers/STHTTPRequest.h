/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import <XXUnknownSuperclass.h> // Unknown library
#import "NSURLConnectionDelegate.h"

@class NSURLConnection, NSMutableData, NSMutableArray, NSData, NSMutableDictionary, NSURL, NSString, NSError, NSURLRequest, NSDictionary;

__attribute__((visibility("hidden")))
@interface STHTTPRequest : XXUnknownSuperclass <NSURLConnectionDelegate> {
	BOOL _addCredentialsToURL;
	BOOL _encodePOSTDictionary;
	BOOL _ignoreSharedCookiesStorage;
	BOOL _preventRedirections;
	id _uploadProgressBlock;
	id _downloadProgressBlock;
	id _completionBlock;
	id _errorBlock;
	id _completionDataBlock;
	NSString* _HTTPMethod;
	NSMutableDictionary* _requestHeaders;
	NSDictionary* _POSTDictionary;
	NSDictionary* _GETDictionary;
	NSData* _rawPOSTData;
	unsigned _POSTDataEncoding;
	NSURL* _url;
	unsigned _forcedResponseEncoding;
	int _responseStatus;
	NSString* _responseStringEncodingName;
	NSDictionary* _responseHeaders;
	NSString* _responseString;
	NSMutableData* _responseData;
	NSError* _error;
	NSURLConnection* _connection;
	NSMutableArray* _filesToUpload;
	NSMutableArray* _dataToUpload;
	NSURLRequest* _request;
	double _timeoutSeconds;
	long long _responseExpectedContentLength;
}
@property(retain, nonatomic) NSDictionary* GETDictionary;
@property(retain, nonatomic) NSString* HTTPMethod;
@property(assign, nonatomic) unsigned POSTDataEncoding;
@property(retain, nonatomic) NSDictionary* POSTDictionary;
@property(assign, nonatomic) BOOL addCredentialsToURL;
@property(copy) id completionBlock;
@property(copy) id completionDataBlock;
@property(retain, nonatomic) NSURLConnection* connection;
@property(retain, nonatomic) NSMutableArray* dataToUpload;
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(copy) id downloadProgressBlock;
@property(assign, nonatomic) BOOL encodePOSTDictionary;
@property(retain, nonatomic) NSError* error;
@property(copy) id errorBlock;
@property(retain, nonatomic) NSMutableArray* filesToUpload;
@property(assign, nonatomic) unsigned forcedResponseEncoding;
@property(readonly, assign) unsigned hash;
@property(assign, nonatomic) BOOL ignoreSharedCookiesStorage;
@property(assign, nonatomic) BOOL preventRedirections;
@property(retain, nonatomic) NSData* rawPOSTData;
@property(retain, nonatomic) NSURLRequest* request;
@property(retain, nonatomic) NSMutableDictionary* requestHeaders;
@property(retain, nonatomic) NSMutableData* responseData;
@property(assign, nonatomic) long long responseExpectedContentLength;
@property(retain, nonatomic) NSDictionary* responseHeaders;
@property(assign, nonatomic) int responseStatus;
@property(retain, nonatomic) NSString* responseString;
@property(retain, nonatomic) NSString* responseStringEncodingName;
@property(readonly, assign) Class superclass;
@property(assign, nonatomic) double timeoutSeconds;
@property(copy) id uploadProgressBlock;
@property(retain, nonatomic) NSURL* url;
+ (void)addCookieToSharedCookiesStorage:(id)sharedCookiesStorage;
+ (void)addCookieToSharedCookiesStorageWithName:(id)name value:(id)value url:(id)url;
+ (id)appendURL:(id)url withGETParameters:(id)getparameters;
+ (void)clearSession;
+ (id)createCookieWithName:(id)name value:(id)value url:(id)url;
+ (void)deleteAllCookiesFromSharedCookieStorage;
+ (void)deleteAllCredentials;
+ (id)descriptionForHTTPStatus:(unsigned)httpstatus;
+ (id)dictionariesSortedByKey:(id)key;
+ (void)expandedURLStringForShortenedURLString:(id)shortenedURLString successBlock:(id)block errorBlock:(id)block3;
+ (id)localCookiesStorage;
+ (id)multipartContentWithBoundary:(id)boundary data:(id)data fileName:(id)name parameterName:(id)name4 mimeType:(id)type;
+ (id)requestWithURL:(id)url;
+ (id)requestWithURLString:(id)urlstring;
+ (id)sessionAuthenticationCredentialsForURL:(id)url;
+ (id)sessionCookiesInSharedCookiesStorage;
+ (id)sharedCredentialsStorage;
+ (id)twitterRequestWithURLString:(id)urlstring timeoutInSeconds:(double)seconds stTwitterUploadProgressBlock:(id)block stTwitterDownloadProgressBlock:(id)block4 stTwitterSuccessBlock:(id)block5 stTwitterErrorBlock:(id)block6;
+ (id)urlByAddingCredentials:(id)credentials toURL:(id)url;
+ (id)userInfoWithErrorDescriptionForHTTPStatus:(unsigned)httpstatus;
- (id)initWithURL:(id)url;
- (void).cxx_destruct;
- (void)addCookie:(id)cookie;
- (void)addCookieWithName:(id)name value:(id)value;
- (void)addCookieWithName:(id)name value:(id)value url:(id)url;
- (void)addDataToUpload:(id)upload parameterName:(id)name;
- (void)addDataToUpload:(id)upload parameterName:(id)name mimeType:(id)type fileName:(id)name4;
- (void)addFileToUpload:(id)upload parameterName:(id)name;
- (void)cancel;
- (void)connection:(id)connection didFailWithError:(id)error;
- (void)connection:(id)connection didReceiveData:(id)data;
- (void)connection:(id)connection didReceiveResponse:(id)response;
- (void)connection:(id)connection didSendBodyData:(int)data totalBytesWritten:(int)written totalBytesExpectedToWrite:(int)write;
- (id)connection:(id)connection willSendRequest:(id)request redirectResponse:(id)response;
- (void)connection:(id)connection willSendRequestForAuthenticationChallenge:(id)authenticationChallenge;
- (void)connectionDidFinishLoading:(id)connection;
- (id)credentialForCurrentHost;
- (id)curlDescription;
- (void)deleteAllCookies;
- (void)deleteSessionCookies;
- (id)password;
- (void)removeHeaderWithName:(id)name;
- (id)requestByAddingCredentialsToURL;
- (id)requestByAddingCredentialsToURL:(BOOL)url;
- (id)requestCookies;
- (id)sessionCookies;
- (void)setCredentialForCurrentHost:(id)currentHost;
- (void)setHeaderWithName:(id)name value:(id)value;
- (void)setUsername:(id)username password:(id)password;
- (void)startAsynchronous;
- (id)startSynchronousWithError:(id*)error;
- (id)stringWithData:(id)data encodingName:(id)name;
- (id)username;
@end

