/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "NSStreamDelegate.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class NSData, NSInputStream, NSMutableData, NSString, NSDate;

@interface AWSS3ChunkedEncodingInputStream : XXUnknownSuperclass <NSStreamDelegate> {
	BOOL _endOfStream;
	id<NSStreamDelegate> _delegate;
	NSInputStream* _stream;
	NSMutableData* _chunkData;
	unsigned _location;
	NSDate* _date;
	NSString* _scope;
	NSString* _priorSha256;
	NSData* _kSigning;
	long long _totalLengthOfChunkSignatureSent;
}
@property(retain, nonatomic) NSMutableData* chunkData;
@property(retain, nonatomic) NSDate* date;
@property(readonly, copy) NSString* debugDescription;
@property(assign, nonatomic) __weak id<NSStreamDelegate> delegate;
@property(readonly, copy) NSString* description;
@property(assign, nonatomic) BOOL endOfStream;
@property(readonly, assign) unsigned hash;
@property(retain, nonatomic) NSData* kSigning;
@property(assign, nonatomic) unsigned location;
@property(retain, nonatomic) NSString* priorSha256;
@property(retain, nonatomic) NSString* scope;
@property(retain, nonatomic) NSInputStream* stream;
@property(readonly, assign) Class superclass;
@property(assign) long long totalLengthOfChunkSignatureSent;
+ (unsigned)computeContentLengthForChunkedData:(unsigned)chunkedData;
+ (unsigned)oneChunkedDataSize:(unsigned)size;
- (id)initWithInputStream:(id)inputStream date:(id)date scope:(id)scope kSigning:(id)signing headerSignature:(id)signature;
- (void).cxx_destruct;
- (void)close;
- (id)dataToHexString:(id)hexString;
- (void)forwardInvocation:(id)invocation;
- (BOOL)getBuffer:(char**)buffer length:(unsigned*)length;
- (id)getSignedChunk:(id)chunk;
- (BOOL)hasBytesAvailable;
- (id)methodSignatureForSelector:(SEL)selector;
- (BOOL)nextChunk;
- (void)open;
- (id)propertyForKey:(id)key;
- (int)read:(char*)read maxLength:(unsigned)length;
- (void)removeFromRunLoop:(id)runLoop forMode:(id)mode;
- (void)scheduleInRunLoop:(id)runLoop forMode:(id)mode;
- (BOOL)setProperty:(id)property forKey:(id)key;
- (void)stream:(id)stream handleEvent:(unsigned)event;
- (id)streamError;
- (unsigned)streamStatus;
@end

