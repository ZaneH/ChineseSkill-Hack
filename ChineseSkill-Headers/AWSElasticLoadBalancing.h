/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "AWSService.h"

@class AWSNetworking, AWSServiceConfiguration;

@interface AWSElasticLoadBalancing : AWSService {
	AWSServiceConfiguration* _configuration;
	AWSNetworking* _networking;
}
@property(retain, nonatomic) AWSServiceConfiguration* configuration;
@property(retain, nonatomic) AWSNetworking* networking;
+ (id)defaultElasticLoadBalancing;
- (id)initWithConfiguration:(id)configuration;
- (void).cxx_destruct;
- (id)addTags:(id)tags;
- (id)applySecurityGroupsToLoadBalancer:(id)loadBalancer;
- (id)attachLoadBalancerToSubnets:(id)subnets;
- (id)configureHealthCheck:(id)check;
- (id)createAppCookieStickinessPolicy:(id)policy;
- (id)createLBCookieStickinessPolicy:(id)policy;
- (id)createLoadBalancer:(id)balancer;
- (id)createLoadBalancerListeners:(id)listeners;
- (id)createLoadBalancerPolicy:(id)policy;
- (id)deleteLoadBalancer:(id)balancer;
- (id)deleteLoadBalancerListeners:(id)listeners;
- (id)deleteLoadBalancerPolicy:(id)policy;
- (id)deregisterInstancesFromLoadBalancer:(id)loadBalancer;
- (id)describeInstanceHealth:(id)health;
- (id)describeLoadBalancerAttributes:(id)attributes;
- (id)describeLoadBalancerPolicies:(id)policies;
- (id)describeLoadBalancerPolicyTypes:(id)types;
- (id)describeLoadBalancers:(id)balancers;
- (id)describeTags:(id)tags;
- (id)detachLoadBalancerFromSubnets:(id)subnets;
- (id)disableAvailabilityZonesForLoadBalancer:(id)loadBalancer;
- (id)enableAvailabilityZonesForLoadBalancer:(id)loadBalancer;
- (id)invokeRequest:(id)request HTTPMethod:(int)method URLString:(id)string targetPrefix:(id)prefix operationName:(id)name outputClass:(Class)aClass;
- (id)modifyLoadBalancerAttributes:(id)attributes;
- (id)registerInstancesWithLoadBalancer:(id)loadBalancer;
- (id)removeTags:(id)tags;
- (id)setLoadBalancerListenerSSLCertificate:(id)certificate;
- (id)setLoadBalancerPoliciesForBackendServer:(id)backendServer;
- (id)setLoadBalancerPoliciesOfListener:(id)listener;
@end

